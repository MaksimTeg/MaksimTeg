{"ast":null,"code":"import { usersAPI } from '../api/api'; //****************--USing Users API--> https://social-network.samuraijs.com/  --***********/\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      {\n        //users incolla due arrays users essistenti(...state.users) con users arrivati(...action.users)->  {...state,users:[...state.users,...action.users]}\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //****-ACTIONS-****\n\n\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport const setTotalUsersCount = totalCount => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    totalUsersCount: totalCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggleFollowingInProgress = (isFetching, userId) => {\n  return {\n    type: FOLLOWING_IN_PROGRESS,\n    isFetching,\n    userId\n  };\n}; //****-THUNK--CREATORS-****\n\nexport const getUsers = (currentPage, pageSize) => {\n  //****-THUNK-****\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/redux/users-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","FOLLOWING_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","setUsers","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","toggleFollowingInProgress","userId","getUsers","dispatch","then","data"],"mappings":"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","sourcesContent":["import { usersAPI } from '../api/api'\n\n//****************--USing Users API--> https://social-network.samuraijs.com/  --***********/\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS'\n\nlet initialState = {\n\tusers: [],\n\tpageSize: 10,\n\ttotalUsersCount: 0,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: [],\n}\nconst usersReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_USERS: {\n\t\t\t//users incolla due arrays users essistenti(...state.users) con users arrivati(...action.users)->  {...state,users:[...state.users,...action.users]}\n\t\t\treturn { ...state, users: [...action.users] }\n\t\t}\n\t\tcase SET_CURRENT_PAGE: {\n\t\t\treturn { ...state, currentPage: action.currentPage }\n\t\t}\n\t\tcase SET_TOTAL_USERS_COUNT: {\n\t\t\treturn { ...state, totalUsersCount: action.totalUsersCount }\n\t\t}\n\t\tcase TOGGLE_IS_FETCHING: {\n\t\t\treturn { ...state, isFetching: action.isFetching }\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n//****-ACTIONS-****\n\nexport const setUsers = users => {\n\treturn { type: SET_USERS, users: users }\n}\n\nexport const setCurrentPage = currentPage => {\n\treturn { type: SET_CURRENT_PAGE, currentPage: currentPage }\n}\n\nexport const setTotalUsersCount = totalCount => {\n\treturn { type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount }\n}\n\nexport const toggleIsFetching = isFetching => {\n\treturn { type: TOGGLE_IS_FETCHING, isFetching }\n}\n\nexport const toggleFollowingInProgress = (isFetching, userId) => {\n\treturn { type: FOLLOWING_IN_PROGRESS, isFetching, userId }\n}\n\n//****-THUNK--CREATORS-****\nexport const getUsers = (currentPage, pageSize) => {\n\t//****-THUNK-****\n\treturn dispatch => {\n\t\tdispatch(toggleIsFetching(true))\n\n\t\tusersAPI.getUsers(currentPage, pageSize).then(data => {\n\t\t\tdispatch(toggleIsFetching(false))\n\t\t\tdispatch(setUsers(data))\n\t\t\tdispatch(setTotalUsersCount(data.totalCount))\n\t\t})\n\t}\n}\n\nexport default usersReducer\n"]},"metadata":{},"sourceType":"module"}