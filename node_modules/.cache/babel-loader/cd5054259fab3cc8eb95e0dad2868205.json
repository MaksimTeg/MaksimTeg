{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/'\n});\nexport const authAPI = {\n  me: () => {\n    return instance.get('/auth/me').then(response => {\n      return response.data;\n    });\n  },\n  login: (email, password, rememberMe = false) => {\n    return instance.post('/auth/login', {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(response => {\n      return response.data;\n    });\n  },\n  logout: () => {\n    return instance.delete('/auth/login').then(response => {\n      return response.data;\n    });\n  }\n};\nexport const usersAPI = {\n  getUsers: (currentPage, pageSize) => {\n    return instance.get(`posts?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post('follow/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  unfollow(userId) {\n    return instance.delete('follow/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileData(userId) {\n    console.warn('Obsolete method.Please profileAPI object.');\n    return profileAPI.getProfileData(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfileData(userId) {\n    return instance.get('posts/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  updateStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  getStatus(userId) {\n    return instance.get('profile/status/' + userId).then(response => {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/api/api.js"],"names":["axios","instance","create","baseURL","authAPI","me","get","then","response","data","login","email","password","rememberMe","post","logout","delete","usersAPI","getUsers","currentPage","pageSize","follow","userId","unfollow","getProfileData","console","warn","profileAPI","updateStatus","status","put","getStatus"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAb,CAAjB;AAKA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,EAAE,EAAC,MAAI;AACH,WAAOJ,QAAQ,CAACK,GAAT,CAAa,UAAb,EAAyBC,IAAzB,CAA+BC,QAAD,IAAY;AAC7C,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAFM,CAAP;AAGH,GALkB;AAMnBC,EAAAA,KAAK,EAAC,CAACC,KAAD,EAAOC,QAAP,EAAgBC,UAAU,GAAC,KAA3B,KAAmC;AACrC,WAAOZ,QAAQ,CAACa,IAAT,CAAc,aAAd,EAA4B;AAACH,MAAAA,KAAK,EAACA,KAAP;AAAaC,MAAAA,QAAQ,EAACA,QAAtB;AAA+BC,MAAAA,UAAU,EAACA;AAA1C,KAA5B,EAAmFN,IAAnF,CAAyFC,QAAD,IAAY;AAEvG,aAAOA,QAAQ,CAACC,IAAhB;AACH,KAHM,CAAP;AAIH,GAXkB;AAYnBM,EAAAA,MAAM,EAAC,MAAI;AACP,WAAOd,QAAQ,CAACe,MAAT,CAAgB,aAAhB,EAA+BT,IAA/B,CAAqCC,QAAD,IAAY;AACpD,aAAOA,QAAQ,CAACC,IAAhB;AACF,KAFM,CAAP;AAGH;AAhBkB,CAAhB;AAoBP,OAAO,MAAMQ,QAAQ,GAAG;AAEpBC,EAAAA,QAAQ,EAAC,CAACC,WAAD,EAAaC,QAAb,KAA0B;AAE/B,WAAOnB,QAAQ,CACjBK,GADS,CACJ,cAAaa,WAAY,UAASC,QAAS,EADvC,EAETb,IAFS,CAEJC,QAAQ,IAAI;AACjB,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAJS,CAAP;AAKH,GATmB;;AAWpBY,EAAAA,MAAM,CAACC,MAAD,EAAQ;AACV,WAAQrB,QAAQ,CAACa,IAAT,CAAc,YAAUQ,MAAxB,EACPf,IADO,CACDC,QAAD,IAAY;AAAE,aAAOA,QAAQ,CAACC,IAAhB;AAAsB,KADlC,CAAR;AAGH,GAfmB;;AAgBpBc,EAAAA,QAAQ,CAACD,MAAD,EAAQ;AACZ,WAAOrB,QAAQ,CAACe,MAAT,CAAgB,YAAUM,MAA1B,EACNf,IADM,CACAC,QAAD,IAAY;AAAE,aAAOA,QAAQ,CAACC,IAAhB;AAAsB,KADnC,CAAP;AAGH,GApBmB;;AAqBpBe,EAAAA,cAAc,CAACF,MAAD,EAAQ;AAClBG,IAAAA,OAAO,CAACC,IAAR,CAAa,2CAAb;AACA,WAAOC,UAAU,CAACH,cAAX,CAA0BF,MAA1B,CAAP;AACH;;AAxBmB,CAAjB;AA4BP,OAAO,MAAMK,UAAU,GAAG;AAEtBH,EAAAA,cAAc,CAACF,MAAD,EAAQ;AAClB,WAAOrB,QAAQ,CAACK,GAAT,CAAa,WAAWgB,MAAxB,EAAgCf,IAAhC,CAAqCC,QAAQ,IAAI;AAC3D,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFU,CAAP;AAGH,GANqB;;AAQtBmB,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAChB,WAAO5B,QAAQ,CAAC6B,GAAT,CAAa,gBAAb,EAA8B;AAACD,MAAAA,MAAM,EAACA;AAAR,KAA9B,EACNtB,IADM,CACAC,QAAD,IAAY;AAAE,aAAOA,QAAQ,CAACC,IAAhB;AAAsB,KADnC,CAAP;AAEH,GAXqB;;AAatBsB,EAAAA,SAAS,CAACT,MAAD,EAAQ;AACb,WAAOrB,QAAQ,CAACK,GAAT,CAAa,oBAAkBgB,MAA/B,EACNf,IADM,CACAC,QAAD,IAAY;AAAE,aAAOA,QAAQ,CAACC,IAAhB;AAAsB,KADnC,CAAP;AAEH;;AAhBqB,CAAnB","sourcesContent":["import axios from \"axios\";\n\n\n\nconst instance = axios.create({\n\tbaseURL: 'https://jsonplaceholder.typicode.com/',\n\n})\n\nexport const authAPI = {\n    me:()=>{\n        return instance.get('/auth/me').then((response)=>{\n            return response.data;\n        });\n    },\n    login:(email,password,rememberMe=false)=>{\n        return instance.post('/auth/login',{email:email,password:password,rememberMe:rememberMe}).then((response)=>{\n           \n            return response.data;\n        });\n    },\n    logout:()=>{\n        return instance.delete('/auth/login').then((response)=>{\n           return response.data;\n        });\n    }\n\n};\n\nexport const usersAPI = {\n\n    getUsers:(currentPage,pageSize) => {\n\n        return instance\n\t\t\t\t\t.get(`posts?page=${currentPage}&count=${pageSize}`)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\treturn response.data\n\t\t\t\t\t})\n    },\n\n    follow(userId){\n        return  instance.post('follow/'+userId)\n        .then((response)=>{ return response.data;});\n\n    },\n    unfollow(userId){\n        return instance.delete('follow/'+userId)\n        .then((response)=>{ return response.data;});\n        \n    },\n    getProfileData(userId){\n        console.warn('Obsolete method.Please profileAPI object.');\n        return profileAPI.getProfileData(userId);\n    }\n   \n   \n}\nexport const profileAPI = {\n\n    getProfileData(userId){\n        return instance.get('posts/' + userId).then(response => {\n\t\t\t\t\treturn response.data\n\t\t\t\t})\n    },\n\n    updateStatus(status){\n        return instance.put('profile/status',{status:status})\n        .then((response)=>{ return response.data;});\n    },\n    \n    getStatus(userId){\n        return instance.get('profile/status/'+userId)\n        .then((response)=>{ return response.data;});\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}