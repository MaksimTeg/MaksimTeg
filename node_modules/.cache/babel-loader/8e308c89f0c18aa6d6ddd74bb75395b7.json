{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_POST = \"UPDATE-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nlet initialState = {\n  newPostValue: \"new post\",\n  posts: [],\n  profileId: 2,\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 4,\n          message: state.newPostValue\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostValue: \"\"\n        };\n      }\n\n    case UPDATE_POST:\n      {\n        return { ...state,\n          newPostValue: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //****-ACTIONS-****\n\n\nexport const addPostAC = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updatePostAC = newText => {\n  return {\n    type: UPDATE_POST,\n    newText: newText\n  };\n};\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status\n  };\n};\nexport const getUserProfile = userId => {\n  return dispatch => {\n    usersAPI.getProfileData(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(status => {\n      dispatch(setStatus(status));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","UPDATE_POST","SET_USER_PROFILE","SET_STATUS","initialState","newPostValue","posts","profileId","profile","status","profileReducer","state","action","type","newPost","id","message","newText","addPostAC","updatePostAC","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfileData","then","data","getStatus","updateStatus","response","resultCode"],"mappings":"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","sourcesContent":["import { profileAPI, usersAPI } from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst UPDATE_POST = \"UPDATE-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\n\nlet initialState = {\n  newPostValue: \"new post\",\n  posts: [\n  ],\n  profileId: 2,\n  profile: null,\n  status:\"\",\n};\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost = { id: 4, message: state.newPostValue };\n      return { ...state, posts: [...state.posts, newPost], newPostValue: \"\" };\n    }\n    case UPDATE_POST: {\n      return { ...state, newPostValue: action.newText };\n    }\n    case SET_USER_PROFILE: {\n      return { ...state, profile: action.profile };\n    }\n    case SET_STATUS:{\n      return {...state,status:action.status};\n    }\n\n    default:\n      return state;\n  }\n};\n//****-ACTIONS-****\nexport const addPostAC = () => {\n  return { type: ADD_POST };\n};\n\nexport const updatePostAC = (newText) => {\n  return { type: UPDATE_POST, newText: newText };\n};\n\nexport const setUserProfile = (profile) => {\n  return { type: SET_USER_PROFILE, profile };\n};\n\nexport const setStatus = (status) => {\n  return { type: SET_STATUS, status };\n};\n\n\n\n\nexport const getUserProfile = (userId) => {\n  \n  return (dispatch) => {\n    usersAPI.getProfileData(userId).then((data) => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\n\nexport const getStatus = (userId) => {\n  \n  return (dispatch) => {\n   \n    profileAPI.getStatus(userId).then((status) => {\n      dispatch(setStatus(status));\n    });\n  };\n};\n\nexport const updateStatus = (status) => {\n  \n  return (dispatch) => {\n   \n    profileAPI.updateStatus(status).then((response) => {\n    \n      if(response.resultCode === 0 ){\n        dispatch(setStatus(status));\n\n      }\n     \n    });\n  };\n};\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}