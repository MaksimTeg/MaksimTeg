{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/'\n});\nexport const usersAPI = {\n  getUsers: (currentPage, pageSize) => {\n    return instance.get(`posts?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post('follow/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  unfollow(userId) {\n    return instance.delete('follow/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileData(userId) {\n    console.warn('Obsolete method.Please profileAPI object.');\n    return profileAPI.getProfileData(userId);\n  },\n\n  getCommentsData(userId) {\n    console.warn('Obsolete method.Please profileAPI object.');\n    return commentsAPI.getCommentsData(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfileData(userId) {\n    return instance.get('posts/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  updateStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  getStatus(userId) {\n    return instance.get('profile/status/' + userId).then(response => {\n      return response.data;\n    });\n  }\n\n};\nexport const commentsAPI = {\n  getCommentsData(userId) {\n    return instance.get(`posts/${userId}/`).then(response => {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/api/api.js"],"names":["axios","instance","create","baseURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfileData","console","warn","profileAPI","getCommentsData","commentsAPI","updateStatus","status","put","getStatus"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAb,CAAjB;AAGA,OAAO,MAAMC,QAAQ,GAAG;AACvBC,EAAAA,QAAQ,EAAE,CAACC,WAAD,EAAcC,QAAd,KAA2B;AACpC,WAAON,QAAQ,CACbO,GADK,CACA,cAAaF,WAAY,UAASC,QAAS,EAD3C,EAELE,IAFK,CAEAC,QAAQ,IAAI;AACjB,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAJK,CAAP;AAKA,GAPsB;;AASvBC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACd,WAAOZ,QAAQ,CAACa,IAAT,CAAc,YAAYD,MAA1B,EAAkCJ,IAAlC,CAAuCC,QAAQ,IAAI;AACzD,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFM,CAAP;AAGA,GAbsB;;AAcvBI,EAAAA,QAAQ,CAACF,MAAD,EAAS;AAChB,WAAOZ,QAAQ,CAACe,MAAT,CAAgB,YAAYH,MAA5B,EAAoCJ,IAApC,CAAyCC,QAAQ,IAAI;AAC3D,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFM,CAAP;AAGA,GAlBsB;;AAmBvBM,EAAAA,cAAc,CAACJ,MAAD,EAAS;AACtBK,IAAAA,OAAO,CAACC,IAAR,CAAa,2CAAb;AACA,WAAOC,UAAU,CAACH,cAAX,CAA0BJ,MAA1B,CAAP;AACA,GAtBsB;;AAuBvBQ,EAAAA,eAAe,CAACR,MAAD,EAAS;AACvBK,IAAAA,OAAO,CAACC,IAAR,CAAa,2CAAb;AACA,WAAOG,WAAW,CAACD,eAAZ,CAA4BR,MAA5B,CAAP;AACA;;AA1BsB,CAAjB;AA4BP,OAAO,MAAMO,UAAU,GAAG;AACzBH,EAAAA,cAAc,CAACJ,MAAD,EAAS;AACtB,WAAOZ,QAAQ,CAACO,GAAT,CAAa,WAAWK,MAAxB,EAAgCJ,IAAhC,CAAqCC,QAAQ,IAAI;AACvD,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFM,CAAP;AAGA,GALwB;;AAOzBY,EAAAA,YAAY,CAACC,MAAD,EAAS;AACpB,WAAOvB,QAAQ,CAACwB,GAAT,CAAa,gBAAb,EAA+B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA/B,EAAmDf,IAAnD,CAAwDC,QAAQ,IAAI;AAC1E,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFM,CAAP;AAGA,GAXwB;;AAazBe,EAAAA,SAAS,CAACb,MAAD,EAAS;AACjB,WAAOZ,QAAQ,CAACO,GAAT,CAAa,oBAAoBK,MAAjC,EAAyCJ,IAAzC,CAA8CC,QAAQ,IAAI;AAChE,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFM,CAAP;AAGA;;AAjBwB,CAAnB;AAoBP,OAAO,MAAMW,WAAW,GAAG;AAC1BD,EAAAA,eAAe,CAACR,MAAD,EAAS;AACvB,WAAOZ,QAAQ,CAACO,GAAT,CAAc,SAAQK,MAAO,GAA7B,EAAiCJ,IAAjC,CAAsCC,QAAQ,IAAI;AACxD,aAAOA,QAAQ,CAACC,IAAhB;AACA,KAFM,CAAP;AAGA;;AALyB,CAApB","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n\tbaseURL: 'https://jsonplaceholder.typicode.com/',\n})\nexport const usersAPI = {\n\tgetUsers: (currentPage, pageSize) => {\n\t\treturn instance\n\t\t\t.get(`posts?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => {\n\t\t\t\treturn response.data\n\t\t\t})\n\t},\n\n\tfollow(userId) {\n\t\treturn instance.post('follow/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\tunfollow(userId) {\n\t\treturn instance.delete('follow/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\tgetProfileData(userId) {\n\t\tconsole.warn('Obsolete method.Please profileAPI object.')\n\t\treturn profileAPI.getProfileData(userId)\n\t},\n\tgetCommentsData(userId) {\n\t\tconsole.warn('Obsolete method.Please profileAPI object.')\n\t\treturn commentsAPI.getCommentsData(userId)\n\t},\n}\nexport const profileAPI = {\n\tgetProfileData(userId) {\n\t\treturn instance.get('posts/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\n\tupdateStatus(status) {\n\t\treturn instance.put('profile/status', { status: status }).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\n\tgetStatus(userId) {\n\t\treturn instance.get('profile/status/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n}\n\nexport const commentsAPI = {\n\tgetCommentsData(userId) {\n\t\treturn instance.get(`posts/${userId}/`).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}