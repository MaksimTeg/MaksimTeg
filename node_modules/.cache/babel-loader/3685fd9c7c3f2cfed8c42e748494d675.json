{"ast":null,"code":"//****************--USing Users API--> https://social-network.samuraijs.com/  --***********/\nimport { authAPI } from \"../api/api\";\nconst SET_USER_DATA = \"SET_USER_DATA\";\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  errors: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.payload,\n          isAuth: action.payload.isAuth\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //****-ACTIONS-****\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => {\n  return {\n    type: SET_USER_DATA,\n    payload: {\n      userId,\n      email,\n      login,\n      isAuth\n    }\n  };\n}; //****-THUNK_ACTIONS-****\n\nexport const getAuthUserData = () => {\n  return dispatch => {\n    authAPI.me().then(data => {\n      if (data.resultCode === 0) {\n        //destructurization\n        let {\n          id,\n          login,\n          email\n        } = data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n      }\n    });\n  };\n};\nexport const login = (email, password, rememberMe, setSubmitting, setErrors, setStatus) => {\n  return dispatch => {\n    authAPI.login(email, password, rememberMe).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(getAuthUserData());\n        setSubmitting(false);\n      } // else if(data.resultCode == 1){\n      //   console.dir(data);\n      //   setErrors({ password: data.messages[0], email: data.messages[0], });\n      //   // setStatus({msg:data.messages[0]});\n      //   setSubmitting(false);\n      //    \n      // }\n      else if (data.resultCode !== 0) {\n          console.dir(data);\n          setStatus({\n            msg: data.messages[0]\n          });\n          setSubmitting(false);\n        }\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    authAPI.logout().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","errors","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","me","then","data","resultCode","id","password","rememberMe","setSubmitting","setErrors","setStatus","console","dir","msg","messages","logout"],"mappings":"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","sourcesContent":["//****************--USing Users API--> https://social-network.samuraijs.com/  --***********/\n\nimport { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = \"SET_USER_DATA\";\n\n\nlet initialState = {\n  userId: null,\n  email:null,\n  login:null,\n  isAuth:false,\n  errors:null,\n};\nconst authReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case SET_USER_DATA:{\n     \n      return {...state,...action.payload,isAuth:action.payload.isAuth};\n\n    }\n     \n\n    default:\n      return state;\n  }\n};\n//****-ACTIONS-****\nexport const setAuthUserData = (userId,email,login,isAuth) => {\n  return { type: SET_USER_DATA, payload:{ userId,email,login,isAuth } };\n};\n\n//****-THUNK_ACTIONS-****\nexport const getAuthUserData = () => {\n  return (dispatch)=>{\n    authAPI.me().then((data)=>{\n      if(data.resultCode === 0){\n        //destructurization\n        let {id,login,email} = data.data;\n        dispatch(setAuthUserData(id,email,login,true));\n\n      }\n    });\n\n  };\n};\n\n\nexport const login = (email,password,rememberMe,setSubmitting,setErrors,setStatus) => {\n  return (dispatch)=>{\n    authAPI.login(email,password,rememberMe).then((data)=>{\n      \n      if(data.resultCode === 0){\n       \n        dispatch(getAuthUserData());\n        setSubmitting(false);\n       \n      }\n      // else if(data.resultCode == 1){\n        \n      //   console.dir(data);\n      //   setErrors({ password: data.messages[0], email: data.messages[0], });\n      //   // setStatus({msg:data.messages[0]});\n      //   setSubmitting(false);\n      //    \n\n      // }\n      else if(data.resultCode !== 0){\n        console.dir(data);\n        setStatus({msg:data.messages[0]});\n        setSubmitting(false);\n      }\n      \n      \n    });\n\n  };\n};\n\nexport const logout = () => {\n  return (dispatch)=>{\n    authAPI.logout().then((data)=>{\n     \n      if(data.resultCode === 0){\n       \n        dispatch(setAuthUserData(null,null,null,false));\n\n      }\n    });\n\n  };\n};\n\n\n\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}