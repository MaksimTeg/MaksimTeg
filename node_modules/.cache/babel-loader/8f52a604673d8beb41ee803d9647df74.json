{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/'\n});\nexport const authAPI = {\n  me: () => {\n    return instance.get('/auth/me').then(response => {\n      return response.data;\n    });\n  },\n  login: (email, password, rememberMe = false) => {\n    return instance.post('/auth/login', {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(response => {\n      return response.data;\n    });\n  },\n  logout: () => {\n    return instance.delete('/auth/login').then(response => {\n      return response.data;\n    });\n  }\n};\nexport const usersAPI = {\n  getUsers: (currentPage, pageSize) => {\n    return instance.get(`posts?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  follow(userId) {\n    return instance.post('follow/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  unfollow(userId) {\n    return instance.delete('follow/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileData(userId) {\n    console.warn('Obsolete method.Please profileAPI object.');\n    return profileAPI.getProfileData(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfileData(userId) {\n    return instance.get('posts/' + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  updateStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  getStatus(userId) {\n    return instance.get('profile/status/' + userId).then(response => {\n      return response.data;\n    });\n  }\n\n};\nexport const commentsAPI = {\n  getCommentsData(userId) {\n    return instance.get('posts/' + userId).then(response => {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/api/api.js"],"names":["axios","instance","create","baseURL","authAPI","me","get","then","response","data","login","email","password","rememberMe","post","logout","delete","usersAPI","getUsers","currentPage","pageSize","follow","userId","unfollow","getProfileData","console","warn","profileAPI","updateStatus","status","put","getStatus","commentsAPI","getCommentsData"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n\tbaseURL: 'https://jsonplaceholder.typicode.com/',\n})\n\nexport const authAPI = {\n\tme: () => {\n\t\treturn instance.get('/auth/me').then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\tlogin: (email, password, rememberMe = false) => {\n\t\treturn instance\n\t\t\t.post('/auth/login', {\n\t\t\t\temail: email,\n\t\t\t\tpassword: password,\n\t\t\t\trememberMe: rememberMe,\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\treturn response.data\n\t\t\t})\n\t},\n\tlogout: () => {\n\t\treturn instance.delete('/auth/login').then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n}\n\nexport const usersAPI = {\n\tgetUsers: (currentPage, pageSize) => {\n\t\treturn instance\n\t\t\t.get(`posts?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then(response => {\n\t\t\t\treturn response.data\n\t\t\t})\n\t},\n\n\tfollow(userId) {\n\t\treturn instance.post('follow/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\tunfollow(userId) {\n\t\treturn instance.delete('follow/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\tgetProfileData(userId) {\n\t\tconsole.warn('Obsolete method.Please profileAPI object.')\n\t\treturn profileAPI.getProfileData(userId)\n\t},\n}\nexport const profileAPI = {\n\tgetProfileData(userId) {\n\t\treturn instance.get('posts/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\n\tupdateStatus(status) {\n\t\treturn instance.put('profile/status', { status: status }).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n\n\tgetStatus(userId) {\n\t\treturn instance.get('profile/status/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n}\n\nexport const commentsAPI = {\n\tgetCommentsData(userId) {\n\t\treturn instance.get('posts/' + userId).then(response => {\n\t\t\treturn response.data\n\t\t})\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}