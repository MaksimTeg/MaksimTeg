{"ast":null,"code":"import { profileAPI, usersAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_POST = 'UPDATE-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: []\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          posts: action.posts\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //****-ACTIONS-****\n\n\nexport const setUserProfile = posts => {\n  return {\n    type: SET_USER_PROFILE,\n    posts\n  };\n};\nexport const getUserProfile = userId => {\n  return dispatch => {\n    profileAPI.getProfileData(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","UPDATE_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","profileReducer","state","action","type","setUserProfile","getUserProfile","userId","dispatch","getProfileData","then","data"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,YAArC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE;AADW,CAAnB;;AAGA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,gBAAL;AAAuB;AACtB,eAAO,EAAE,GAAGK,KAAL;AAAYF,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAA1B,SAAP;AACA;;AACD;AACC,aAAOE,KAAP;AALF;AAOA,CARD,C,CASA;;;AAEA,OAAO,MAAMG,cAAc,GAAGL,KAAK,IAAI;AACtC,SAAO;AAAEI,IAAAA,IAAI,EAAEP,gBAAR;AAA0BG,IAAAA;AAA1B,GAAP;AACA,CAFM;AAIP,OAAO,MAAMM,cAAc,GAAGC,MAAM,IAAI;AACvC,SAAOC,QAAQ,IAAI;AAClBf,IAAAA,UAAU,CAACgB,cAAX,CAA0BF,MAA1B,EAAkCG,IAAlC,CAAuCC,IAAI,IAAI;AAC9CH,MAAAA,QAAQ,CAACH,cAAc,CAACM,IAAD,CAAf,CAAR;AACA,KAFD;AAGA,GAJD;AAKA,CANM;AAQP,eAAeV,cAAf","sourcesContent":["import { profileAPI, usersAPI } from '../api/api'\n\nconst ADD_POST = 'ADD-POST'\nconst UPDATE_POST = 'UPDATE-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\n\nlet initialState = {\n\tposts: []\n}\nconst profileReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_USER_PROFILE: {\n\t\t\treturn { ...state, posts: action.posts }\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n//****-ACTIONS-****\n\nexport const setUserProfile = posts => {\n\treturn { type: SET_USER_PROFILE, posts }\n}\n\nexport const getUserProfile = userId => {\n\treturn dispatch => {\n\t\tprofileAPI.getProfileData(userId).then(data => {\n\t\t\tdispatch(setUserProfile(data))\n\t\t})\n\t}\n}\n\nexport default profileReducer\n"]},"metadata":{},"sourceType":"module"}