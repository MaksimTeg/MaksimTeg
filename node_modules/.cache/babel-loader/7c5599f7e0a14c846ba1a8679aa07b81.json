{"ast":null,"code":"import { usersAPI } from '../api/api'; //****************--USing Users API--> https://social-network.samuraijs.com/  --***********/\n\nconst SET_USERS = 'SET_USERS';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  users: [],\n  isFetching: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //****-ACTIONS-****\n\n\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport const setTotalUsersCount = totalCount => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    totalUsersCount: totalCount\n  };\n};\nexport const toggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n}; //****-THUNK--CREATORS-****\n\nexport const getUsers = (currentPage, pageSize) => {\n  //****-THUNK-****\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/redux/users-reducer.js"],"names":["usersAPI","SET_USERS","TOGGLE_IS_FETCHING","initialState","users","isFetching","usersReducer","state","action","type","SET_CURRENT_PAGE","currentPage","SET_TOTAL_USERS_COUNT","totalUsersCount","setUsers","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","getUsers","pageSize","dispatch","then","data"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,UAAU,EAAE;AAFM,CAAnB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,SAAL;AAAgB;AAEf,eAAO,EAAE,GAAGM,KAAL;AAAYH,UAAAA,KAAK,EAAE,CAAC,GAAGI,MAAM,CAACJ,KAAX;AAAnB,SAAP;AACA;;AACD,SAAKM,gBAAL;AAAuB;AACtB,eAAO,EAAE,GAAGH,KAAL;AAAYI,UAAAA,WAAW,EAAEH,MAAM,CAACG;AAAhC,SAAP;AACA;;AACD,SAAKC,qBAAL;AAA4B;AAC3B,eAAO,EAAE,GAAGL,KAAL;AAAYM,UAAAA,eAAe,EAAEL,MAAM,CAACK;AAApC,SAAP;AACA;;AACD,SAAKX,kBAAL;AAAyB;AACxB,eAAO,EAAE,GAAGK,KAAL;AAAYF,UAAAA,UAAU,EAAEG,MAAM,CAACH;AAA/B,SAAP;AACA;;AAED;AACC,aAAOE,KAAP;AAhBF;AAkBA,CAnBD,C,CAoBA;;;AAEA,OAAO,MAAMO,QAAQ,GAAGV,KAAK,IAAI;AAChC,SAAO;AAAEK,IAAAA,IAAI,EAAER,SAAR;AAAmBG,IAAAA,KAAK,EAAEA;AAA1B,GAAP;AACA,CAFM;AAIP,OAAO,MAAMW,cAAc,GAAGJ,WAAW,IAAI;AAC5C,SAAO;AAAEF,IAAAA,IAAI,EAAEC,gBAAR;AAA0BC,IAAAA,WAAW,EAAEA;AAAvC,GAAP;AACA,CAFM;AAIP,OAAO,MAAMK,kBAAkB,GAAGC,UAAU,IAAI;AAC/C,SAAO;AAAER,IAAAA,IAAI,EAAEG,qBAAR;AAA+BC,IAAAA,eAAe,EAAEI;AAAhD,GAAP;AACA,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAGb,UAAU,IAAI;AAC7C,SAAO;AAAEI,IAAAA,IAAI,EAAEP,kBAAR;AAA4BG,IAAAA;AAA5B,GAAP;AACA,CAFM,C,CAIP;;AACA,OAAO,MAAMc,QAAQ,GAAG,CAACR,WAAD,EAAcS,QAAd,KAA2B;AAClD;AACA,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACH,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACAlB,IAAAA,QAAQ,CAACmB,QAAT,CAAkBR,WAAlB,EAA+BS,QAA/B,EAAyCE,IAAzC,CAA8CC,IAAI,IAAI;AACrDF,MAAAA,QAAQ,CAACH,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAG,MAAAA,QAAQ,CAACP,QAAQ,CAACS,IAAD,CAAT,CAAR;AACAF,MAAAA,QAAQ,CAACL,kBAAkB,CAACO,IAAI,CAACN,UAAN,CAAnB,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CAVM;AAYP,eAAeX,YAAf","sourcesContent":["import { usersAPI } from '../api/api'\n\n//****************--USing Users API--> https://social-network.samuraijs.com/  --***********/\nconst SET_USERS = 'SET_USERS'\n\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\n\nlet initialState = {\n\tusers: [],\n\tisFetching: false,\n}\nconst usersReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_USERS: {\n\n\t\t\treturn { ...state, users: [...action.users] }\n\t\t}\n\t\tcase SET_CURRENT_PAGE: {\n\t\t\treturn { ...state, currentPage: action.currentPage }\n\t\t}\n\t\tcase SET_TOTAL_USERS_COUNT: {\n\t\t\treturn { ...state, totalUsersCount: action.totalUsersCount }\n\t\t}\n\t\tcase TOGGLE_IS_FETCHING: {\n\t\t\treturn { ...state, isFetching: action.isFetching }\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n//****-ACTIONS-****\n\nexport const setUsers = users => {\n\treturn { type: SET_USERS, users: users }\n}\n\nexport const setCurrentPage = currentPage => {\n\treturn { type: SET_CURRENT_PAGE, currentPage: currentPage }\n}\n\nexport const setTotalUsersCount = totalCount => {\n\treturn { type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount }\n}\n\nexport const toggleIsFetching = isFetching => {\n\treturn { type: TOGGLE_IS_FETCHING, isFetching }\n}\n\n//****-THUNK--CREATORS-****\nexport const getUsers = (currentPage, pageSize) => {\n\t//****-THUNK-****\n\treturn dispatch => {\n\t\tdispatch(toggleIsFetching(true))\n\t\tusersAPI.getUsers(currentPage, pageSize).then(data => {\n\t\t\tdispatch(toggleIsFetching(false))\n\t\t\tdispatch(setUsers(data))\n\t\t\tdispatch(setTotalUsersCount(data.totalCount))\n\t\t})\n\t}\n}\n\nexport default usersReducer\n"]},"metadata":{},"sourceType":"module"}