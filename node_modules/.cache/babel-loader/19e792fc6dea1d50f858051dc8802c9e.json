{"ast":null,"code":"import { profileAPI, usersAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_POST = 'UPDATE-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  newPostValue: 'new post',\n  posts: [],\n  postsId: 2,\n  profile: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 4,\n          message: state.newPostValue\n        };\n        return { ...state,\n          posts: [...state.posts, newPost],\n          newPostValue: ''\n        };\n      }\n\n    case UPDATE_POST:\n      {\n        return { ...state,\n          newPostValue: action.newText\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //****-ACTIONS-****\n\n\nexport const setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport const getUserProfile = userId => {\n  return dispatch => {\n    profileAPI.getProfileData(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/katsiarynabulauskaya/Sites/Maksim/lessons/Les2/it-kamasutra2020-main/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","UPDATE_POST","SET_USER_PROFILE","SET_STATUS","initialState","newPostValue","posts","postsId","profile","profileReducer","state","action","type","newPost","id","message","newText","status","setUserProfile","getUserProfile","userId","dispatch","getProfileData","then","data"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,YAArC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,YAAY,EAAE,UADI;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,OAAO,EAAE,CAHS;AAIlBC,EAAAA,OAAO,EAAE;AAJS,CAAnB;;AAMA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKZ,QAAL;AAAe;AACd,YAAIa,OAAO,GAAG;AAAEC,UAAAA,EAAE,EAAE,CAAN;AAASC,UAAAA,OAAO,EAAEL,KAAK,CAACL;AAAxB,SAAd;AACA,eAAO,EAAE,GAAGK,KAAL;AAAYJ,UAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBO,OAAjB,CAAnB;AAA8CR,UAAAA,YAAY,EAAE;AAA5D,SAAP;AACA;;AACD,SAAKJ,WAAL;AAAkB;AACjB,eAAO,EAAE,GAAGS,KAAL;AAAYL,UAAAA,YAAY,EAAEM,MAAM,CAACK;AAAjC,SAAP;AACA;;AACD,SAAKd,gBAAL;AAAuB;AACtB,eAAO,EAAE,GAAGQ,KAAL;AAAYF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AAA5B,SAAP;AACA;;AACD,SAAKL,UAAL;AAAiB;AAChB,eAAO,EAAE,GAAGO,KAAL;AAAYO,UAAAA,MAAM,EAAEN,MAAM,CAACM;AAA3B,SAAP;AACA;;AAED;AACC,aAAOP,KAAP;AAhBF;AAkBA,CAnBD,C,CAoBA;;;AAEA,OAAO,MAAMQ,cAAc,GAAGV,OAAO,IAAI;AACxC,SAAO;AAAEI,IAAAA,IAAI,EAAEV,gBAAR;AAA0BM,IAAAA;AAA1B,GAAP;AACA,CAFM;AAIP,OAAO,MAAMW,cAAc,GAAGC,MAAM,IAAI;AACvC,SAAOC,QAAQ,IAAI;AAClBvB,IAAAA,UAAU,CAACwB,cAAX,CAA0BF,MAA1B,EAAkCG,IAAlC,CAAuCC,IAAI,IAAI;AAC9CH,MAAAA,QAAQ,CAACH,cAAc,CAACM,IAAD,CAAf,CAAR;AACA,KAFD;AAGA,GAJD;AAKA,CANM;AAQP,eAAef,cAAf","sourcesContent":["import { profileAPI, usersAPI } from '../api/api'\n\nconst ADD_POST = 'ADD-POST'\nconst UPDATE_POST = 'UPDATE-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\n\nlet initialState = {\n\tnewPostValue: 'new post',\n\tposts: [],\n\tpostsId: 2,\n\tprofile: null,\n}\nconst profileReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_POST: {\n\t\t\tlet newPost = { id: 4, message: state.newPostValue }\n\t\t\treturn { ...state, posts: [...state.posts, newPost], newPostValue: '' }\n\t\t}\n\t\tcase UPDATE_POST: {\n\t\t\treturn { ...state, newPostValue: action.newText }\n\t\t}\n\t\tcase SET_USER_PROFILE: {\n\t\t\treturn { ...state, profile: action.profile }\n\t\t}\n\t\tcase SET_STATUS: {\n\t\t\treturn { ...state, status: action.status }\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n//****-ACTIONS-****\n\nexport const setUserProfile = profile => {\n\treturn { type: SET_USER_PROFILE, profile }\n}\n\nexport const getUserProfile = userId => {\n\treturn dispatch => {\n\t\tprofileAPI.getProfileData(userId).then(data => {\n\t\t\tdispatch(setUserProfile(data))\n\t\t})\n\t}\n}\n\nexport default profileReducer\n"]},"metadata":{},"sourceType":"module"}